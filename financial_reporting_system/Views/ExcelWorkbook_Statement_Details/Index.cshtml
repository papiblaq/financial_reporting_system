@model financial_reporting_system.Controllers.ExcelWorkbook_Statement_DetailsController.SaveDetailsInputModel

@{
    Layout = null;
    ViewData["Title"] = "Details Data Form";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh; /* Full height of the viewport */
            margin: 0;
            background-color: #f4f4f4; /* Light grey background for modern look */
            font-family: Arial, sans-serif;
        }

        .container {
            width: 60%;
            min-height: 100vh; /* Stretch to full height */
            background: #fff; /* White background */
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow for modern feel */
            border-radius: 10px;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .breadcrumb-modern {
            display: flex;
            justify-content: space-between; /* Distributes items evenly */
            align-items: center;
            flex-wrap: wrap;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 8px;
            list-style: none;
            width: 100%;
        }

            .breadcrumb-modern .breadcrumb-item {
                flex: 1; /* Makes each item take equal space */
                text-align: center; /* Centers text */
            }

                .breadcrumb-modern .breadcrumb-item a {
                    display: inline-block;
                    padding: 10px 15px;
                    background-color: #00CC00; /* Green background */
                    color: white;
                    text-decoration: none;
                    border-radius: 20px;
                    font-size: 14px;
                    font-weight: 500;
                    transition: all 0.3s ease-in-out;
                    width: 80%; /* Adjust width to prevent overly stretched buttons */
                }

                    .breadcrumb-modern .breadcrumb-item a:hover {
                        background-color: #339933; /* Darker green on hover */
                        transform: scale(1.05);
                    }

                .breadcrumb-modern .breadcrumb-item::after {
                    content: ">";
                    color: #00CC00;
                    font-weight: bold;
                    margin-left: 10px;
                }

                .breadcrumb-modern .breadcrumb-item:last-child::after {
                    content: "";
                }




        .form-group {
            margin-top: 20px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }

        .back-button {
            display: inline-block;
            padding: 10px;
            background-color: #007bff;
            color: white;
            border-radius: 50%;
            text-decoration: none;
            font-size: 18px;
        }

            .back-button i {
                color: white;
            }

        #message {
            margin-top: 10px;
            font-size: 14px;
            color: green;
        }

        /* Navigation buttons container */
        .nav-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        /* Navigation buttons container */
        .nav-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        /* Right-side buttons container */
        .right-buttons {
            display: flex;
            gap: 10px; /* Space between Next and Previous buttons */
        }

        /* Common styles for buttons */
        .nav-button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
            background-color: #00CC00;
            color: white;
            text-decoration: none;
            border-radius: 50%;
            font-size: 20px;
            transition: all 0.3s ease-in-out;
        }

            /* Hover effect */
            .nav-button:hover {
                background-color: #339933;
                transform: scale(1.1);
            }

        /* Specific styles for back, previous, and next buttons */
        .back-button {
            margin-left: 10px;
        }

        .prev-button {
        }

        .next-button {
            margin-right: 10px;
        }


        .nav-button {
            display: inline-block;
            padding: 10px 20px; /* Adjust padding for size */
            text-align: center;
            text-decoration: none;
            background-color: #00CC00;
            color: white;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
            white-space: nowrap; /* Ensure the text does not wrap */
            transition: background-color 0.3s ease;
        }

            .nav-button:hover {
                background-color: #0056b3; /* Darker color on hover */
                color: white;
            }

        .right-buttons {
            display: flex;
            gap: 10px; /* Space between buttons */
        }

            .right-buttons .nav-button {
                min-width: 100px; /* Minimum width to ensure the buttons are rectangular */
                max-width: 150px; /* Maximum width for buttons */
                text-overflow: ellipsis; /* Show "..." if text overflows */
                overflow: hidden;
                word-wrap: break-word; /* Break long words to avoid overflow */
            }

    </style>
</head>

<body>
    <div class="container">
        <!-- Navigation Buttons -->
        <div class="nav-buttons">
            <!-- Back Button -->
            <a href="@Url.Action("ExcelWorkbookUpload", "ExcelMapping_Documentation")" class="nav-button back-button">
                <i class="fa-solid fa-house"></i>
            </a>
        </div>
        <!-- Breadcrumb Navigation -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb breadcrumb-modern">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_types")">Report type</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_Sheet")">Report</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_Header")">Report header</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_Details")">Report details</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "ExcelWorkbookMapping")">Report mappings</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "ExcelMapping_Documentation")">Report cells</a></li>
            </ol>
        </nav>
        <div class="profile-card">
            <h1>Report Details</h1>
            <form id="saveDataForm" method="post" asp-action="SaveData" class="mt-4">
                @Html.AntiForgeryToken() <!-- CSRF Protection Added -->
                <!-- Report Type Dropdown -->
                <div class="form-group">
                    <label for="STMNT_ID">Report Type</label>
                    <select id="STMNT_ID" name="STMNT_ID" class="form-control" required>
                        <option value="">-- Select Sheet --</option>
                        <option value="@ViewBag.SelectedWorkbook" selected>@ViewBag.SelectedWorkbook</option>
                    </select>
                </div>
                <!-- Report Dropdown -->
                <div class="form-group">
                    <label for="SHEET_ID">Report</label>
                    <select id="SHEET_ID" name="SHEET_ID" class="form-control" required>
                        <option value="">-- Select Sheet --</option>
                        <option value="@ViewBag.SelectedWorksheet" selected>@ViewBag.SelectedWorksheet</option>
                    </select>
                </div>
                <!-- Available Headers Dropdown -->
                <div class="form-group">
                    <label for="AvailableHeaders">Available Headers</label>
                    @Html.DropDownList(
                             "AvailableHeaders", // Name of the dropdown
                             (IEnumerable<SelectListItem>)ViewBag.AvailableHeaders, // Options from ViewBag
                             "-- Select Header --", // Default placeholder text
                             new { @class = "form-control", required = "required", id = "headerDropdown" } // Additional HTML attributes
                             )
                    <span class="text-danger">@Html.ValidationMessage("AvailableHeaders")</span> <!-- Validation message -->
                </div>
                <!-- Hidden Input Field for HEADER_ID -->
                <div class="form-group">
                    <input type="hidden" id="headerIdField" name="HEADER_ID" />
                </div>
                <!-- Reference Code -->
                <div class="form-group">
                    <label for="REF_CD">Reference Code</label>
                    <input id="REF_CD" name="REF_CD" class="form-control" required />
                </div>
                <!-- Description -->
                <div class="form-group">
                    <label for="DESCRIPTION">Description</label>
                    <input id="DESCRIPTION" name="DESCRIPTION" class="form-control" required />
                </div>
                <!-- Created By -->
                <div class="form-group">
                    <label for="CREATED_BY">Created By</label>
                    <input id="CREATED_BY" name="CREATED_BY" class="form-control" required />
                </div>
                <!-- Submit and Link Buttons -->
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a href="/ExcelWorkbook_Statement_Details/DetailsGridView" class="btn btn-secondary">Available Details</a>
                </div>
            </form>
        </div>
        <div class="nav-buttons" style="display: flex; justify-content: flex-end;">
            <div class="right-buttons">
                <div class="right-buttons">
                    <!-- Previous Button (Inverted Next) -->
                    <a href="@Url.Action("Index", "ExcelWorkbook_Statement_Header")" class="nav-button prev-button">
                        back</i>
                    </a>
                    <!-- Next Button -->
                    <a href="@Url.Action("Index", "ExcelWorkbookMapping")" class="nav-button next-button">
                        next</i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <!-- Script Section -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Handle dropdown change event
            $('#headerDropdown').on('change', function () {
                var selectedValue = $(this).val(); // Get the selected value from the dropdown
                if (selectedValue) {
                    // Split the value to extract REF_CD and DESCRIPTION
                    var parts = selectedValue.split(')');
                    if (parts.length === 2) {
                        var description = parts[1].trim(); // Extract DESCRIPTION
                        // Call the server-side method to fetch HEADER_ID by DESCRIPTION
                        $.ajax({
                            url: '/ExcelWorkbook_Statement_Details/GetHeaderIdByDescriptionInView',
                            type: 'GET',
                            data: { description: description },
                            success: function (headerId) {
                                if (!isNaN(headerId)) {
                                    // Update the hidden input field with the HEADER_ID
                                    $('#headerIdField').val(headerId);
                                } else {
                                    alert('Invalid HEADER_ID received.');
                                    $('#headerIdField').val(''); // Clear the field if invalid
                                }
                            },
                            error: function () {
                                alert('Failed to fetch HEADER_ID.');
                                $('#headerIdField').val(''); // Clear the field on error
                            }
                        });
                    }
                } else {
                    // Clear the hidden input field if no selection is made
                    $('#headerIdField').val('');
                }
            });
            // Handle form submission
            $('#saveDataForm').on('submit', function (event) {
                event.preventDefault(); // Prevent default form submission
                var formData = $(this).serialize(); // Serialize form data
                // Send AJAX POST request to SaveData action
                $.ajax({
                    url: '/ExcelWorkbook_Statement_Details/SaveData',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            alert(response.message); // Show success message
                            window.location.href = response.redirectUrl; // Redirect to Index page
                        } else {
                            alert(response.message); // Show error message
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('An unexpected error occurred: ' + xhr.responseText);
                    }
                });
            });
        });
    </script>
</body>