@model financial_reporting_system.Controllers.ExcelWorkbook_Statement_typesController.StatementInputModel

@{
    Layout = null;
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Arial', sans-serif;
        }

        .container {
            margin-top: 50px;
        }

        .breadcrumb {
            display: flex; /* Arrange breadcrumb items in a horizontal row */
            flex-wrap: nowrap; /* Prevent wrapping to the next line */
            background-color: #f8f9fa; /* Optional: Background color for breadcrumb */
            padding: 8px 16px;
            border-radius: 5px;
            margin-bottom: 20px;
            list-style: none; /* Remove default list styling */
        }

        .breadcrumb-item {
            margin-right: 8px; /* Space between breadcrumb items */
            font-size: 1rem;
            color: #007bff; /* Default link color */
        }

            .breadcrumb-item a {
                text-decoration: none; /* Remove underline from links */
                color: #007bff; /* Link color */
                transition: color 0.3s ease; /* Smooth hover transition */
            }

                .breadcrumb-item a:hover {
                    color: #0056b3; /* Darker shade on hover */
                }





        .profile-card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            background-color: #fff;
            max-width: 500px;
            margin: 0 auto;
            text-align: center;
        }

            .profile-card h3 {
                color: #343a40;
                margin-bottom: 20px;
            }

            .profile-card p {
                color: #6c757d;
                margin-bottom: 30px;
            }

        .btn-start {
            background-color: #28a745;
            border-color: #28a745;
            color: #fff;
            padding: 10px 20px;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

            .btn-start:hover {
                background-color: #218838;
                border-color: #1e7e34;
            }

        .btn-available-workbooks {
            margin-left: 10px; /* Add some spacing between the buttons */
            background-color: #6c757d; /* A different color for distinction */
            border-color: #6c757d;
        }

        .hidden {
            display: none;
        }

        /* Style for inner profile cards */
        .profile-card.inner-card {
            margin: 10px 0;
            padding: 15px;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

            .profile-card.inner-card h4 {
                color: #343a40;
                margin-bottom: 10px;
            }

            .profile-card.inner-card p {
                color: #6c757d;
                margin-bottom: 15px;
            }

            .profile-card.inner-card .btn {
                width: 100%;
            }
    </style>
</head>
<body>
    <div class="container">
        <!-- Breadcrumb Navigation -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" id="step1"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_types")">Statement types</a></li>
                <li class="breadcrumb-item" id="step2"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_Sheet")">Statement Sheet</a></li>
                <li class="breadcrumb-item" id="step3"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_Header")">Statement header</a></li>
                <li class="breadcrumb-item" id="step4"><a href="@Url.Action("Index", "ExcelWorkbook_Statement_Details")">Statement details</a></li>
                <li class="breadcrumb-item" id="step5"><a href="@Url.Action("Index", "ExcelWorkbookMapping")">Excel mappings</a></li>
            </ol>
        </nav>


        <!-- Initial Form -->
        <div id="initialForm" class="profile-card">
            <h3>Excel Analysis</h3>
            <p>Here we will start by inserting the sheets' info so that we can understand its basic structure to make mapping easier.</p>
            <form id="workbookForm">
                <div class="form-group" id="workbookGroup">
                    <label for="selectedWorkbook">Select Workbook:</label>
                    <select name="selectedWorkbook" class="form-control" id="selectedWorkbook">
                        <option value="">-- Select Workbook --</option>
                        @if (ViewBag.Workbooks != null)
                        {
                            @foreach (var workbook in ViewBag.Workbooks)
                            {
                                <option value="@workbook">@workbook</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group hidden" id="sheetGroup">
                    <label for="selectedSheet">Select Sheet:</label>
                    <select name="selectedSheet" class="form-control" id="selectedSheet">
                        <option value="">-- Select Sheet --</option>
                    </select>
                </div>
                <button type="button" class="btn btn-start" id="startButton">Start</button>
                <a asp-controller="ExcelWorkbook_Statement_types" asp-action="WorkbookGridView" class="btn btn-secondary">Available Workbooks</a>
            </form>
        </div>

        <!-- Data Entry Form (Hidden Initially) -->
        <div id="dataEntryForm" class="profile-card hidden">
            <h3 id="sheetHeading">Statement types for <span id="sheetName"></span></h3>

            <form method="post" asp-action="SaveData" asp-controller="ExcelWorkbook_Statement_types" class="mt-4" enctype="multipart/form-data">
                <div class="form-group">
                    <label asp-for="REF_CD">REF_CD</label>
                    <input asp-for="REF_CD" class="form-control" required />
                    <span asp-validation-for="REF_CD" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DESCRIPTION">DESCRIPTION</label>
                    <input asp-for="DESCRIPTION" class="form-control" required />
                    <span asp-validation-for="DESCRIPTION" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CREATED_BY">CREATED_BY</label>
                    <input asp-for="CREATED_BY" class="form-control" required />
                    <span asp-validation-for="CREATED_BY" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="FilePath">File Path</label>
                    <input asp-for="FilePath" class="form-control" required />
                    <span asp-validation-for="FilePath" class="text-danger"></span>
                </div>

                <!-- Hidden input for EXCEL_SHEET -->
                <input type="hidden" asp-for="EXCEL_SHEET" id="excelSheetName" />
                <!-- Hidden input for EXCEL_WORKBOOK -->
                <input type="hidden" asp-for="EXCEL_WORKBOOK" id="excelWorkbookName" />
                <button type="submit" class="btn btn-primary">Submit</button>
                <a asp-controller="ExcelWorkbook_Statement_types" asp-action="WorkbookGridView" class="btn btn-secondary">Available Statement Types</a>
            </form>
        </div>

        <!-- Profile Card for Existing Sheet (Hidden Initially) -->
        <div id="existingSheetCard" class="profile-card hidden">
            <h3>There was a previous insertion of this sheet's details</h3>
            <p>
                The Excel sheet <strong><span id="existingSheetName"></span></strong> has predefined data in the following areas.
                Click on the area of choice to resume insertion of details.
            </p>

            <!-- Profile Card for Statement Types -->
            <div class="profile-card inner-card">
                <h4>Statement Types</h4>
                <p>Edit predefined data for statement types.</p>
                <a asp-controller="ExcelWorkbook_Statement_types" asp-action="WorkbookGridView" class="btn btn-primary">Edit</a>
            </div>

            <!-- Profile Card for Statement Sheet -->
            <div class="profile-card inner-card">
                <h4>Statement Sheet</h4>
                <p>Edit predefined data for statement sheets.</p>
                <a href="#" class="btn btn-primary">Edit</a>
            </div>

            <!-- Profile Card for Statement Header -->
            <div class="profile-card inner-card">
                <h4>Statement Header</h4>
                <p>Edit predefined data for statement headers.</p>
                <a href="#" class="btn btn-primary">Edit</a>
            </div>

            <!-- Profile Card for Statement Details -->
            <div class="profile-card inner-card">
                <h4>Statement Details</h4>
                <p>Edit predefined data for statement details.</p>
                <a href="#" class="btn btn-primary">Edit</a>
            </div>

            <!-- Back Button -->
            <div class="mt-3">
                <a id="backButton" class="btn btn-secondary">Back</a>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            // Check for success message
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                alert(successMessage); // Display success message as an alert
            }

            // Check for error message
            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage) {
                alert(errorMessage); // Display error message as an alert
            }

            // Initialize breadcrumb
            updateBreadcrumb('step1');

            // Handle workbook selection
            $('#selectedWorkbook').on('change', function () {
                const selectedWorkbook = $(this).val();
                if (selectedWorkbook) {
                    // Populate hidden input with selected workbook
                    $('#excelWorkbookName').val(selectedWorkbook);

                    // Fetch sheets for the selected workbook
                    $.ajax({
                        url: '@Url.Action("GetSheetsForWorkbook", "ExcelWorkbook_Statement_types")',
                        type: 'GET',
                        data: { workbook: selectedWorkbook },
                        success: function (response) {
                            if (response.sheets && response.sheets.length > 0) {
                                // Populate sheets dropdown
                                $('#selectedSheet').empty().append('<option value="">-- Select Sheet --</option>');
                                response.sheets.forEach(sheet => {
                                    $('#selectedSheet').append(`<option value="${sheet}">${sheet}</option>`);
                                });
                                $('#sheetGroup').removeClass('hidden'); // Show sheet group
                                updateBreadcrumb('step2'); // Update breadcrumb to step 2
                            } else {
                                alert('No sheets found in the selected workbook.');
                                $('#sheetGroup').addClass('hidden');
                            }
                        },
                        error: function () {
                            alert('An error occurred while fetching sheets.');
                        }
                    });
                } else {
                    $('#sheetGroup').addClass('hidden');
                }
            });

            // Handle Start button click
            $('#startButton').on('click', function () {
                const selectedWorkbook = $('#selectedWorkbook').val();
                const selectedSheet = $('#selectedSheet').val();

                if (!selectedWorkbook || !selectedSheet) {
                    alert('Please select a workbook and sheet first.');
                    return;
                }

                // Check if the selected sheet exists in the database
                $.ajax({
                    url: '@Url.Action("CheckSheetExists", "ExcelWorkbook_Statement_types")',
                    type: 'GET',
                    data: { sheet: selectedSheet },
                    success: function (response) {
                        if (response.exists) {
                            // Sheet exists: Show the existing sheet profile card
                            $('#existingSheetName').text(selectedSheet);
                            $('#existingSheetCard').removeClass('hidden');
                            $('#initialForm').addClass('hidden');
                            $('#dataEntryForm').addClass('hidden');
                        } else {
                            // Sheet does not exist: Show the data entry form
                            $('#initialForm').addClass('hidden');
                            $('#dataEntryForm').removeClass('hidden');
                            $('#sheetName').text(selectedSheet);
                            $('#excelSheetName').val(selectedSheet);
                            updateBreadcrumb('step3');
                        }
                    },
                    error: function () {
                        alert('An error occurred while checking the sheet.');
                    }
                });
            });

            // Handle Edit button clicks for each profile card
            $('.profile-card.inner-card .btn').on('click', function () {
                const area = $(this).closest('.inner-card').find('h4').text(); // Get the area name
                alert(`You clicked Edit for: ${area}`); // Replace with your logic
            });

            // Handle Back button click
            $('#backButton').on('click', function () {
                window.location.href = '@Url.Action("Index", "ExcelWorkbook_Statement_types")';
            });

                   function updateBreadcrumb(activeStep) {
            // Remove the 'active' class from all breadcrumb items
            $('.breadcrumb-item').removeClass('active');

            // Add the 'active' class to the current step
            $('#' + activeStep).addClass('active');
        }

        function goToStep(step) {
            switch (step) {
                case 'step1':
                    // Go to the first step (Statement types)
                    $('#initialForm').removeClass('hidden');
                    $('#dataEntryForm').addClass('hidden');
                    $('#existingSheetCard').addClass('hidden');
                    updateBreadcrumb('step1');
                    break;

                case 'step2':
                    // Go to the second step (Statement Sheet)
                    if ($('#selectedWorkbook').val()) {
                        $('#initialForm').removeClass('hidden');
                        $('#dataEntryForm').addClass('hidden');
                        $('#existingSheetCard').addClass('hidden');
                        updateBreadcrumb('step2');
                    } else {
                        alert('Please complete the previous step first.');
                    }
                    break;

                case 'step3':
                    // Go to the third step (Statement header)
                    if ($('#selectedWorkbook').val() && $('#selectedSheet').val()) {
                        $('#initialForm').addClass('hidden');
                        $('#dataEntryForm').removeClass('hidden');
                        $('#existingSheetCard').addClass('hidden');
                        updateBreadcrumb('step3');
                    } else {
                        alert('Please complete the previous steps first.');
                    }
                    break;

                case 'step4':
                    // Go to the fourth step (Statement details)
                    if ($('#selectedWorkbook').val() && $('#selectedSheet').val()) {
                        $('#initialForm').addClass('hidden');
                        $('#dataEntryForm').addClass('hidden');
                        $('#existingSheetCard').removeClass('hidden');
                        updateBreadcrumb('step4');
                    } else {
                        alert('Please complete the previous steps first.');
                    }
                    break;
            }
        }
        });
    </script>
</body>
</html>