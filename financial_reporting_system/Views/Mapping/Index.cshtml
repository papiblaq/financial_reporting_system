﻿@using syncfusion_grid.Controllers
@model List<MappingController.FinancialStatementDetail>

@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <h1 class="mt-5">Available Statement types</h1>
    <!-- First Grid -->
    <ejs-grid id="grid" dataSource="@Model" allowPaging="true" allowSorting="true" allowFiltering="true" allowGrouping="false" cssClass="white-grid">
        <e-grid-pagesettings pageSize="5"></e-grid-pagesettings>
        <e-grid-selectionsettings type="Single"></e-grid-selectionsettings>
        <e-grid-columns>
            <e-grid-column type="checkbox" width="50"></e-grid-column>
            <e-grid-column field="DETAIL_ID" headerText="Detail ID" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="STMNT_ID" headerText="Statement ID" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="SHEET_ID" headerText="Sheet ID" textAlign="Right" width="120"></e-grid-column>
            <e-grid-column field="HEADER_ID" headerText="Header ID" textAlign="Right" width="120"></e-grid-column>
            <e-grid-column field="GL_ACCT_CAT_CD" headerText="GL Account Category Code" textAlign="Right" width="200"></e-grid-column>
            <e-grid-column field="REF_CD" headerText="Reference Code" textAlign="Right" width="200"></e-grid-column>
            <e-grid-column field="DESCRIPTION" headerText="Description" textAlign="Right" width="200"></e-grid-column>
            <e-grid-column field="SYS_CREATE_TS" headerText="System Create Timestamp" textAlign="Right" width="120" format="yMd"></e-grid-column>
            <e-grid-column field="CREATED_BY" headerText="Created By" textAlign="Right" width="120"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>

    <!-- Spacer between grids -->
    <div class="grid-spacer"></div>

    <h1 class="mt-5">Unmapped GL</h1>
    <!-- Second Grid -->
    <ejs-grid id="accountGrid" dataSource="@ViewBag.AccountDetails" allowPaging="true" allowSorting="true" allowFiltering="true" allowGrouping="false" cssClass="white-grid">
        <e-grid-pagesettings pageSize="15"></e-grid-pagesettings>
        <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
        <e-grid-columns>
            <e-grid-column type="checkbox" width="50"></e-grid-column>
            <e-grid-column field="GL_ACCT_CAT_CD" headerText="GL Account Category Code" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="GL_ACCT_ID" headerText="GL Account ID" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="GL_ACCT_NO" headerText="GL Account No" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="LEDGER_NO" headerText="Ledger No" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="ACCT_DESC" headerText="Account Description" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="BAL_CD" headerText="Balance Code" textAlign="Right" width="150"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>

    <!-- Centered Button -->
    <div class="button-container">
        <button id="saveCombinedRows" class="custom-delete-button">Save MappedGL</button>
    </div>

    <!-- Add the "View Grid" button -->
    <div class="button-container">
        <a asp-action="Grid" class="btn btn-secondary">View Mapped GL</a>
    </div>
</div>

<style>
    .container {
        margin: 20px 10px; /* Margin around the container */
        padding: 0px; /* Padding inside the container */
        border: 1px solid #ddd; /* Optional: border for the container */
        border-radius: 8px; /* Rounded corners for the container */
        background-color: #f8f9fa; /* Light grey background for the container */
    }

    .white-grid {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .button-container {
        display: flex; /* Use Flexbox */
        justify-content: center; /* Center horizontally */
        align-items: center; /* Center vertically */
        margin-top: 20px; /* Add space above the button */
    }

    .custom-delete-button {
        background-color: #d9534f; /* Red background color */
        color: white; /* White text color */
        border: none; /* No border */
        padding: 10px 20px; /* Padding for spacing */
        font-size: 16px; /* Font size */
        border-radius: 5px; /* Rounded corners */
        cursor: pointer; /* Pointer cursor on hover */
        transition: background-color 0.3s ease; /* Smooth transition effect */
    }

        .custom-delete-button:hover {
            background-color: #c9302c; /* Darker red on hover */
        }

    .grid-spacer {
        height: 20px; /* Spacer height between the grids */
    }

    h1 {
        font-size: 18px; /* Smaller font size */
        color: #6c757d; /* Greyish color */
        font-weight: normal; /* Normal font weight */
        margin-bottom: 10px; /* Margin below the heading */
</style>


<script>
    document.getElementById('saveCombinedRows').addEventListener('click', function () {
        var orderGrid = document.getElementById('grid').ej2_instances[0];
        var accountGrid = document.getElementById('accountGrid').ej2_instances[0];

        var selectedOrderRow = orderGrid.getSelectedRecords();
        var selectedAccountRows = accountGrid.getSelectedRecords();

        // Check if exactly one row is selected in the first grid
        if (selectedOrderRow.length !== 1) {
            alert('Please select exactly one row in the first grid.');
            return;
        }

        // Proceed with combining rows if exactly one row is selected in the first grid
        if (selectedOrderRow.length > 0 && selectedAccountRows.length > 0) {
            var combinedRows = selectedAccountRows.map(accountRow => ({
                DETAIL_ID: selectedOrderRow[0].DETAIL_ID,
                STMNT_ID: selectedOrderRow[0].STMNT_ID,
                SHEET_ID: selectedOrderRow[0].SHEET_ID,
                HEADER_ID: selectedOrderRow[0].HEADER_ID,
                GL_ACCT_CAT_CD: selectedOrderRow[0].GL_ACCT_CAT_CD,
                REF_CD: selectedOrderRow[0].REF_CD,
                DESCRIPTION: selectedOrderRow[0].DESCRIPTION,
                SYS_CREATE_TS: selectedOrderRow[0].SYS_CREATE_TS,
                CREATED_BY: selectedOrderRow[0].CREATED_BY,
                GL_ACCT_ID: accountRow.GL_ACCT_ID,
                GL_ACCT_NO: accountRow.GL_ACCT_NO,
                LEDGER_NO: accountRow.LEDGER_NO,
                ACCT_DESC: accountRow.ACCT_DESC,
                BAL_CD: accountRow.BAL_CD
            }));

            fetch('/Mapping/SaveCombinedRows', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(combinedRows)
            }).then(response => response.json())
                .then(data => {
                    if (data.error) {
                        alert('Error: ' + data.error);
                    } else {
                        alert(data.message);
                        // Reload the page after a successful save
                        location.reload();
                    }
                })
                .catch(error => {
                    alert('Error: ' + error);
                });
        } else {
            alert('No rows selected');
        }
    });
</script>


